steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'europe-west1-docker.pkg.dev/regal-framework-475315-m1/docker-repo/ub-travel-services-frontend:${SHORT_SHA}'
      - '-t'
      - 'europe-west1-docker.pkg.dev/regal-framework-475315-m1/docker-repo/ub-travel-services-frontend:latest'
      - '.'
    id: 'build-image'

  # Step 2: Push both tags to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - 'europe-west1-docker.pkg.dev/regal-framework-475315-m1/docker-repo/ub-travel-services-frontend'
    id: 'push-images'
    waitFor: ['build-image']

  # Step 3: Clone the Terraform infrastructure repository
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        git clone https://$$GITHUB_TOKEN@github.com/HristevMartin/constructionPlatformInfra.git /workspace/infra
    secretEnv: ['GITHUB_TOKEN']
    id: 'clone-infra-repo'

  # Step 4: Configure git
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd /workspace/infra
        git config user.email "cloudbuild@gcp.com"
        git config user.name "Cloud Build"
    id: 'configure-git'
    waitFor: ['clone-infra-repo']

  # Step 5: Update the Terraform variable with new image
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd /workspace/infra
        
        # Update the image in terraform.tfvars
        NEW_IMAGE="europe-west1-docker.pkg.dev/regal-framework-475315-m1/docker-repo/ub-travel-services-frontend:${SHORT_SHA}"
        
        # Update terraform.tfvars file
        sed -i "s|frontend_simple_image_name = \".*\"|frontend_simple_image_name = \"$${NEW_IMAGE}\"|g" environments/prod/terraform.tfvars
        
        echo "=== Updated terraform.tfvars ==="
        grep frontend_simple_image_name environments/prod/terraform.tfvars
    id: 'update-terraform-vars'
    waitFor: ['configure-git', 'push-images']

  # Step 6: Initialize Terraform
  - name: 'hashicorp/terraform:1.6'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd /workspace/infra/environments/prod
        terraform init -input=false
    id: 'terraform-init'
    waitFor: ['update-terraform-vars']

  # Step 7: Validate Terraform
  - name: 'hashicorp/terraform:1.6'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd /workspace/infra/environments/prod
        terraform validate
    id: 'terraform-validate'
    waitFor: ['terraform-init']

  # Step 8: Plan Terraform changes
  - name: 'hashicorp/terraform:1.6'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd /workspace/infra/environments/prod
        terraform plan -target=module.frontend_simple -out=tfplan -input=false
        echo "=== Terraform Plan Summary ==="
        terraform show -no-color tfplan
    id: 'terraform-plan'
    waitFor: ['terraform-validate']

  # Step 9: Apply Terraform changes (deploy to Cloud Run)
  - name: 'hashicorp/terraform:1.6'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd /workspace/infra/environments/prod
        terraform apply -auto-approve -input=false tfplan
        echo "=== Deployment Complete ==="
        terraform output -json
    id: 'terraform-apply'
    waitFor: ['terraform-plan']

  # Step 10: Verify deployment
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "=== Cloud Run Service Status ==="
        gcloud run services describe trade-harmony-frontend-simple \
          --region=europe-west1 \
          --format="table(status.url,status.conditions[0].type,status.conditions[0].status)"
    id: 'verify-deployment'
    waitFor: ['terraform-apply']

# Use Secret Manager for GitHub token
availableSecrets:
  secretManager:
    - versionName: projects/regal-framework-475315-m1/secrets/github-token/versions/latest
      env: 'GITHUB_TOKEN'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

timeout: '1800s'